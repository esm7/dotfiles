let g:HiCursorWords_linkStyle='AutoHighlight'
highlight AutoHighlight ctermbg=LightMagenta

call plug#load('vim-python-pep8-indent', 'vim-highlight-cursor-words')
call plug#load('auto-pairs', 'vim-fugitive')
call plug#load('vim-javascript', 'typescript-vim')

set noautochdir
set signcolumn=yes
set noshowmode

if has("nvim")
	" Use <c-space> to trigger completion
	inoremap <silent><expr> <c-space> coc#refresh()	set completeopt=noinsert,menuone,noselect
	let g:lsp_signs_enabled = 1
	let g:lsp_diagnostics_echo_cursor = 1 " enable echo under cursor when in normal mode

	call coc#config('python', {'pythonPath': split(execute('!which python'), '\n')[-1]})

	nmap <silent> gd <Plug>(coc-definition)
	nmap <silent> gy <Plug>(coc-type-definition)
	nmap <silent> gt <Plug>(coc-implementation)
	nmap <silent> gr <Plug>(coc-references)
	" Goto definition in a new window
	nmap <C-w>gd <C-w>sgd
	echo "Loaded dev plugins"
else
	echo "Some development features currently only work in nvim"
endif

" Use K to show documentation in preview window
nnoremap <silent> K :call <SID>show_documentation()<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction

function! SwitchSourceHeader()
  if (expand ("%:e") == "cpp")
	try
		find %:t:r.h
	catch
		find %:t:r.hpp
	endtry
  elseif (expand ("%:e") == "h")
	try
		find %:t:r.cpp
	catch
		find %:t:r.hpp
	endtry
  else
	try
		find %:t:r.h
	catch
		find %:t:r.cpp
	endtry
  endif
endfunction

nmap <Leader>o :call SwitchSourceHeader()<CR>
" Use 'go' to enter a search for the word under the cursor after switching
" source-header
nmap go *<Leader>oggn
nmap <Leader>m :Gdiffsplit!<CR>
command! Gconflicts silent grep! "<<< HEAD" | copen

" When auto-highlight is on, hlsearch is just obstructive
set nohlsearch

source ~/dotfiles/diffoff.vim


